---
- hosts: all
  become: true
  tasks:
  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

  - name: Add an apt signing key for Docker
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: Add apt repository for stable version
    apt_repository:
      repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
      state: present

  - name: Install docker and its dependecies
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet
        - kubeadm
        - kubectl

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name node-master --pod-network-cidr=192.168.0.0/16

  - name: Create kube config directory for Vagrant
    file:
      path: /home/vagrant/.kube
      state: directory
      mode: 0755

  - name: Setup kubeconfig for vagrant user
    command: "{{ item }}"
    with_items:
     - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config

  - file:
      path: /home/vagrant/.kube/config
      owner: vagrant
      group: vagrant
      mode: 0755

  - name: Install calico pod network
    become: false
    command: kubectl create -f https://docs.projectcalico.org/v3.5/getting-started/kubernetes/installation/hosted/kubernetes-datastore/calico-networking/1.7/calico.yaml

  - name: Generate join command
    shell: kubeadm token create --print-join-command > /vagrant/infra/join-command
	  
  - name: Download and extract helm
    unarchive:
	  src: https://get.helm.sh/helm-v3.0.2-linux-amd64.tar.gz
	  dest: /home/vagrant/helm
	  remote_src: yes
	  
  - name: Copy helm to /usr/local/bin
    copy:
      src: /home/vagrant/helm/helm
      dest: /usr/local/bin/helm
		
  handlers:
    - name: docker status
      service: name=docker state=started
